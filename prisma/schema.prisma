datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  clerkId       String    @unique
  email         String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  profile       Profile?
  analytics     Analytics[]
  pricingData   PricingData[]
}

model Profile {
  id              String    @id @default(cuid())
  userId          String    @unique
  user            User      @relation(fields: [userId], references: [id])
  linkedInUrl     String?
  followerCount   Int?
  industry        String?
  location        String?
  demographics    Json?     // Stores detailed demographic data
  lastAnalyzed    DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Analytics {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  pageViews       Int       @default(0)
  conversionRate  Float?
  averagePrice    Float?
  totalRevenue    Float?
  date            DateTime  @default(now())
  metadata        Json?     // Stores additional analytics data
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([userId, date])
}

model PricingData {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  productType     String    // e.g., "course", "ebook", "template"
  basePrice       Float
  recommendedPrice Float
  minPrice        Float
  maxPrice        Float
  confidence      Float     // Algorithm confidence score
  factors         Json      // Stores pricing factors and weights
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([userId, productType])
} 